/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UniswapPriceOracle,
  UniswapPriceOracleInterface,
} from "../UniswapPriceOracle";

const _abi = [
  {
    inputs: [],
    name: "UNISWAP_V2_FACTORY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "uniswapV2Pairs",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506109a5806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806341976e09146100515780638cac22201461008157806399d8fae3146100b1578063ad5c4648146100cf575b600080fd5b61006b600480360381019061006691906105d2565b6100ed565b604051610078919061075b565b60405180910390f35b61009b600480360381019061009691906105d2565b61051b565b6040516100a891906106d7565b60405180910390f35b6100b961054e565b6040516100c691906106d7565b60405180910390f35b6100d7610566565b6040516100e491906106d7565b60405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561015e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101559061071b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561032157735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f73ffffffffffffffffffffffffffffffffffffffff1663e6a4390573b4fbf271143f4fbf7b91a5ded31805e42b2208d6846040518363ffffffff1660e01b81526004016102549291906106f2565b60206040518083038186803b15801561026c57600080fd5b505afa158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a491906105fb565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e69061073b565b60405180910390fd5b6000806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561049657600080fd5b505afa1580156104aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ce9190610624565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff16915081670de0b6b3a76400008261050891906107b8565b6105129190610787565b92505050919050565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f81565b73b4fbf271143f4fbf7b91a5ded31805e42b2208d681565b60008135905061058d8161092a565b92915050565b6000815190506105a28161092a565b92915050565b6000815190506105b781610941565b92915050565b6000815190506105cc81610958565b92915050565b6000602082840312156105e457600080fd5b60006105f28482850161057e565b91505092915050565b60006020828403121561060d57600080fd5b600061061b84828501610593565b91505092915050565b60008060006060848603121561063957600080fd5b6000610647868287016105a8565b9350506020610658868287016105a8565b9250506040610669868287016105bd565b9150509250925092565b61067c81610802565b82525050565b600061068f601583610776565b915061069a826108d8565b602082019050919050565b60006106b2600d83610776565b91506106bd82610901565b602082019050919050565b6106d18161082e565b82525050565b60006020820190506106ec6000830184610673565b92915050565b60006040820190506107076000830185610673565b6107146020830184610673565b9392505050565b6000602082019050818103600083015261073481610682565b9050919050565b60006020820190508181036000830152610754816106a5565b9050919050565b600060208201905061077060008301846106c8565b92915050565b600082825260208201905092915050565b60006107928261082e565b915061079d8361082e565b9250826107ad576107ac6108a9565b5b828204905092915050565b60006107c38261082e565b91506107ce8361082e565b9250816fffffffffffffffffffffffffffffffff04831182151516156107f7576107f661087a565b5b828202905092915050565b600061080d8261084a565b9050919050565b60006dffffffffffffffffffffffffffff82169050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600063ffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f496e76616c696420746f6b656e20616464726573730000000000000000000000600082015250565b7f4e6f207061697220666f756e6400000000000000000000000000000000000000600082015250565b61093381610802565b811461093e57600080fd5b50565b61094a81610814565b811461095557600080fd5b50565b6109618161086a565b811461096c57600080fd5b5056fea2646970667358221220b7145fba25ff3bdb673b39095b32bf3ad50020503dd36d85b12b0ecc7ad7247d64736f6c63430008040033";

export class UniswapPriceOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniswapPriceOracle> {
    return super.deploy(overrides || {}) as Promise<UniswapPriceOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UniswapPriceOracle {
    return super.attach(address) as UniswapPriceOracle;
  }
  connect(signer: Signer): UniswapPriceOracle__factory {
    return super.connect(signer) as UniswapPriceOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapPriceOracleInterface {
    return new utils.Interface(_abi) as UniswapPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as UniswapPriceOracle;
  }
}
