/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SeacowsGroupFeed,
  SeacowsGroupFeedInterface,
} from "../SeacowsGroupFeed";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "current",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AnswerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "startedBy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
    ],
    name: "NewRound",
    type: "event",
  },
  {
    inputs: [],
    name: "collection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getAnswer",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "_roundId",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "groupId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_groupId",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "latestAnswer",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_answer",
        type: "int256",
      },
    ],
    name: "updateAnswer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "_roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "_answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startedAt",
        type: "uint256",
      },
    ],
    name: "updateRoundData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d48806100616000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638205bf6a11610097578063b5ab58dc11610066578063b5ab58dc1461027f578063b633620c146102af578063cd6dc687146102df578063feaf968c146102fb57610100565b80638205bf6a146101f35780639a6fc8f514610211578063a0f44c9214610245578063a87a20ce1461026357610100565b8063668a0f02116100d3578063668a0f021461017b5780637284e416146101995780637b103999146101b75780637de1e536146101d557610100565b8063313ce567146101055780634aa2011f1461012357806350d25bcd1461013f57806354fd4d501461015d575b600080fd5b61010d61031d565b60405161011a9190610b08565b60405180910390f35b61013d600480360381019061013891906108d5565b61032e565b005b610147610433565b6040516101549190610a1d565b60405180910390f35b610165610439565b6040516101729190610a9a565b60405180910390f35b61018361043e565b6040516101909190610a9a565b60405180910390f35b6101a1610444565b6040516101ae9190610a38565b60405180910390f35b6101bf610481565b6040516101cc9190610a02565b60405180910390f35b6101dd6104a7565b6040516101ea9190610a02565b60405180910390f35b6101fb6104cd565b6040516102089190610a9a565b60405180910390f35b61022b600480360381019061022691906108ac565b6104d3565b60405161023c959493929190610ab5565b60405180910390f35b61024d610550565b60405161025a9190610a9a565b60405180910390f35b61027d6004803603810190610278919061085a565b610556565b005b61029960048036038101906102949190610883565b61065d565b6040516102a69190610a1d565b60405180910390f35b6102c960048036038101906102c49190610883565b610675565b6040516102d69190610a9a565b60405180910390f35b6102f960048036038101906102f4919061081e565b61068d565b005b610303610769565b604051610314959493929190610ab5565b60405180910390f35b60008054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b590610a7a565b60405180910390fd5b8369ffffffffffffffffffff16600381905550826001819055508160028190555082600760006003548152602001908152602001600020819055508160086000600354815260200190815260200160002081905550806009600060035481526020019081526020016000208190555050505050565b60015481565b600081565b60035481565b60606040518060400160405280601481526020017f76302e302e312f47726f7570466565642e736f6c000000000000000000000000815250905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600080600080600085600760008869ffffffffffffffffffff16815260200190815260200160002054600960008969ffffffffffffffffffff16815260200190815260200160002054600860008a69ffffffffffffffffffff16815260200190815260200160002054899450945094509450945091939590929450565b60065481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dd90610a7a565b60405180910390fd5b80600181905550426002819055506003600081548092919061060790610bdb565b919050555080600760006003548152602001908152602001600020819055504260086000600354815260200190815260200160002081905550426009600060035481526020019081526020016000208190555050565b60076020528060005260406000206000915090505481565b60086020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461071d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071490610a5a565b60405180910390fd5b81600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806006819055505050565b6000806000806000600354600760006003548152602001908152602001600020546009600060035481526020019081526020016000205460086000600354815260200190815260200160002054600354945094509450945094509091929394565b6000813590506107d981610cb6565b92915050565b6000813590506107ee81610ccd565b92915050565b60008135905061080381610ce4565b92915050565b60008135905061081881610cfb565b92915050565b6000806040838503121561083157600080fd5b600061083f858286016107ca565b9250506020610850858286016107f4565b9150509250929050565b60006020828403121561086c57600080fd5b600061087a848285016107df565b91505092915050565b60006020828403121561089557600080fd5b60006108a3848285016107f4565b91505092915050565b6000602082840312156108be57600080fd5b60006108cc84828501610809565b91505092915050565b600080600080608085870312156108eb57600080fd5b60006108f987828801610809565b945050602061090a878288016107df565b935050604061091b878288016107f4565b925050606061092c878288016107f4565b91505092959194509250565b61094181610b3f565b82525050565b61095081610b51565b82525050565b600061096182610b23565b61096b8185610b2e565b935061097b818560208601610ba8565b61098481610c53565b840191505092915050565b600061099c601483610b2e565b91506109a782610c64565b602082019050919050565b60006109bf601683610b2e565b91506109ca82610c8d565b602082019050919050565b6109de81610b7b565b82525050565b6109ed81610b92565b82525050565b6109fc81610b85565b82525050565b6000602082019050610a176000830184610938565b92915050565b6000602082019050610a326000830184610947565b92915050565b60006020820190508181036000830152610a528184610956565b905092915050565b60006020820190508181036000830152610a738161098f565b9050919050565b60006020820190508181036000830152610a93816109b2565b9050919050565b6000602082019050610aaf60008301846109d5565b92915050565b600060a082019050610aca60008301886109e4565b610ad76020830187610947565b610ae460408301866109d5565b610af160608301856109d5565b610afe60808301846109e4565b9695505050505050565b6000602082019050610b1d60008301846109f3565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610b4a82610b5b565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff82169050919050565b60005b83811015610bc6578082015181840152602081019050610bab565b83811115610bd5576000848401525b50505050565b6000610be682610b7b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c1957610c18610c24565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f47726f7570466565643a20464f5242494444454e000000000000000000000000600082015250565b7f6f6e6c79207265676973747279206d61792063616c6c00000000000000000000600082015250565b610cbf81610b3f565b8114610cca57600080fd5b50565b610cd681610b51565b8114610ce157600080fd5b50565b610ced81610b7b565b8114610cf857600080fd5b50565b610d0481610b92565b8114610d0f57600080fd5b5056fea26469706673582212203e7495074f5f7dbd389fada83ae486fcc6219d9eed97b9ab1ff1970e103f6ce564736f6c63430008040033";

export class SeacowsGroupFeed__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SeacowsGroupFeed> {
    return super.deploy(overrides || {}) as Promise<SeacowsGroupFeed>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SeacowsGroupFeed {
    return super.attach(address) as SeacowsGroupFeed;
  }
  connect(signer: Signer): SeacowsGroupFeed__factory {
    return super.connect(signer) as SeacowsGroupFeed__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SeacowsGroupFeedInterface {
    return new utils.Interface(_abi) as SeacowsGroupFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SeacowsGroupFeed {
    return new Contract(address, _abi, signerOrProvider) as SeacowsGroupFeed;
  }
}
