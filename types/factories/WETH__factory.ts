/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WETH, WETHInterface } from "../WETH";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b506040518060400160405280600d81526020017f57726170706564204574686572000000000000000000000000000000000000008152506040518060400160405280600481526020017f5745544800000000000000000000000000000000000000000000000000000000815250601282600090805190602001906200009892919062000197565b508160019080519060200190620000b192919062000197565b508060ff1660808160ff1660f81b815250504660a08181525050620000db620000eb60201b60201c565b60c0818152505050505062000448565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516200011f919062000305565b60405180910390206040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152508051906020012046306040516020016200017c9594939291906200031e565b60405160208183030381529060405280519060200120905090565b828054620001a590620003e3565b90600052602060002090601f016020900481019282620001c9576000855562000215565b82601f10620001e457805160ff191683800117855562000215565b8280016001018555821562000215579182015b8281111562000214578251825591602001919060010190620001f7565b5b50905062000224919062000228565b5090565b5b808211156200024357600081600090555060010162000229565b5090565b62000252816200039b565b82525050565b6200026381620003af565b82525050565b600081546200027881620003e3565b62000284818662000390565b94506001821660008114620002a25760018114620002b457620002eb565b60ff19831686528186019350620002eb565b620002bf856200037b565b60005b83811015620002e357815481890152600182019150602081019050620002c2565b838801955050505b50505092915050565b620002ff81620003d9565b82525050565b600062000313828462000269565b915081905092915050565b600060a08201905062000335600083018862000258565b62000344602083018762000258565b62000353604083018662000258565b620003626060830185620002f4565b62000371608083018462000247565b9695505050505050565b60008190508160005260206000209050919050565b600081905092915050565b6000620003a882620003b9565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006002820490506001821680620003fc57607f821691505b6020821081141562000413576200041262000419565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60805160f81c60a05160c0516119dc6200047b60003960006108fc015260006108c8015260006108a201526119dc6000f3fe6080604052600436106100ec5760003560e01c80633644e5151161008a578063a9059cbb11610059578063a9059cbb1461031f578063d0e30db01461035c578063d505accf14610366578063dd62ed3e1461038f576100fb565b80633644e5151461024f57806370a082311461027a5780637ecebe00146102b757806395d89b41146102f4576100fb565b806323b872dd116100c657806323b872dd146101935780632e1a7d4d146101d057806330adf81f146101f9578063313ce56714610224576100fb565b806306fdde0314610100578063095ea7b31461012b57806318160ddd14610168576100fb565b366100fb576100f96103cc565b005b600080fd5b34801561010c57600080fd5b50610115610426565b60405161012291906115e0565b60405180910390f35b34801561013757600080fd5b50610152600480360381019061014d9190611258565b6104b4565b60405161015f91906114b1565b60405180910390f35b34801561017457600080fd5b5061017d6105a6565b60405161018a9190611662565b60405180910390f35b34801561019f57600080fd5b506101ba60048036038101906101b5919061116b565b6105ac565b6040516101c791906114b1565b60405180910390f35b3480156101dc57600080fd5b506101f760048036038101906101f29190611294565b6107f8565b005b34801561020557600080fd5b5061020e61087c565b60405161021b91906114cc565b60405180910390f35b34801561023057600080fd5b506102396108a0565b604051610246919061167d565b60405180910390f35b34801561025b57600080fd5b506102646108c4565b60405161027191906114cc565b60405180910390f35b34801561028657600080fd5b506102a1600480360381019061029c9190611106565b610921565b6040516102ae9190611662565b60405180910390f35b3480156102c357600080fd5b506102de60048036038101906102d99190611106565b610939565b6040516102eb9190611662565b60405180910390f35b34801561030057600080fd5b50610309610951565b60405161031691906115e0565b60405180910390f35b34801561032b57600080fd5b5061034660048036038101906103419190611258565b6109df565b60405161035391906114b1565b60405180910390f35b6103646103cc565b005b34801561037257600080fd5b5061038d600480360381019061038891906111ba565b610af3565b005b34801561039b57600080fd5b506103b660048036038101906103b1919061112f565b610df2565b6040516103c39190611662565b60405180910390f35b6103d63334610e17565b3373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c3460405161041c9190611662565b60405180910390a2565b60008054610433906117fb565b80601f016020809104026020016040519081016040528092919081815260200182805461045f906117fb565b80156104ac5780601f10610481576101008083540402835291602001916104ac565b820191906000526020600020905b81548152906001019060200180831161048f57829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105949190611662565b60405180910390a36001905092915050565b60025481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146106e55781600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106dd9190611735565b925050819055505b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107349190611735565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107e59190611662565b60405180910390a3600190509392505050565b6108023382610ee7565b61082b813373ffffffffffffffffffffffffffffffffffffffff16610fb790919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040516108719190611662565b60405180910390a250565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000046146108fa576108f561100a565b61091c565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b6001805461095e906117fb565b80601f016020809104026020016040519081016040528092919081815260200182805461098a906117fb565b80156109d75780601f106109ac576101008083540402835291602001916109d7565b820191906000526020600020905b8154815290600101906020018083116109ba57829003601f168201915b505050505081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a309190611735565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ae19190611662565b60405180910390a36001905092915050565b42841015610b36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2d90611642565b60405180910390fd5b6000610b406108c4565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9898989600560008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001610bc8969594939291906114e7565b60405160208183030381529060405280519060200120604051602001610bef92919061147a565b604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051610c2c949392919061159b565b6020604051602081039080840390855afa158015610c4e573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610cc257508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610d01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf890611602565b60405180910390fd5b86600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051610de19190611662565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b8060026000828254610e2991906116df565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610edb9190611662565b60405180910390a35050565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f369190611735565b9250508190555080600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fab9190611662565b60405180910390a35050565b600080600080600085875af1905080611005576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffc90611622565b60405180910390fd5b505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161103c9190611463565b60405180910390206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001204630604051602001611097959493929190611548565b60405160208183030381529060405280519060200120905090565b6000813590506110c18161194a565b92915050565b6000813590506110d681611961565b92915050565b6000813590506110eb81611978565b92915050565b6000813590506111008161198f565b92915050565b60006020828403121561111857600080fd5b6000611126848285016110b2565b91505092915050565b6000806040838503121561114257600080fd5b6000611150858286016110b2565b9250506020611161858286016110b2565b9150509250929050565b60008060006060848603121561118057600080fd5b600061118e868287016110b2565b935050602061119f868287016110b2565b92505060406111b0868287016110dc565b9150509250925092565b600080600080600080600060e0888a0312156111d557600080fd5b60006111e38a828b016110b2565b97505060206111f48a828b016110b2565b96505060406112058a828b016110dc565b95505060606112168a828b016110dc565b94505060806112278a828b016110f1565b93505060a06112388a828b016110c7565b92505060c06112498a828b016110c7565b91505092959891949750929550565b6000806040838503121561126b57600080fd5b6000611279858286016110b2565b925050602061128a858286016110dc565b9150509250929050565b6000602082840312156112a657600080fd5b60006112b4848285016110dc565b91505092915050565b6112c681611769565b82525050565b6112d58161177b565b82525050565b6112e481611787565b82525050565b6112fb6112f682611787565b61182d565b82525050565b6000815461130e816117fb565b61131881866116b8565b94506001821660008114611333576001811461134457611377565b60ff19831686528186019350611377565b61134d85611698565b60005b8381101561136f57815481890152600182019150602081019050611350565b838801955050505b50505092915050565b600061138b826116ad565b61139581856116c3565b93506113a58185602086016117c8565b6113ae81611895565b840191505092915050565b60006113c66002836116d4565b91506113d1826118a6565b600282019050919050565b60006113e96018836116c3565b91506113f4826118cf565b602082019050919050565b600061140c6013836116c3565b9150611417826118f8565b602082019050919050565b600061142f6017836116c3565b915061143a82611921565b602082019050919050565b61144e816117b1565b82525050565b61145d816117bb565b82525050565b600061146f8284611301565b915081905092915050565b6000611485826113b9565b915061149182856112ea565b6020820191506114a182846112ea565b6020820191508190509392505050565b60006020820190506114c660008301846112cc565b92915050565b60006020820190506114e160008301846112db565b92915050565b600060c0820190506114fc60008301896112db565b61150960208301886112bd565b61151660408301876112bd565b6115236060830186611445565b6115306080830185611445565b61153d60a0830184611445565b979650505050505050565b600060a08201905061155d60008301886112db565b61156a60208301876112db565b61157760408301866112db565b6115846060830185611445565b61159160808301846112bd565b9695505050505050565b60006080820190506115b060008301876112db565b6115bd6020830186611454565b6115ca60408301856112db565b6115d760608301846112db565b95945050505050565b600060208201905081810360008301526115fa8184611380565b905092915050565b6000602082019050818103600083015261161b816113dc565b9050919050565b6000602082019050818103600083015261163b816113ff565b9050919050565b6000602082019050818103600083015261165b81611422565b9050919050565b60006020820190506116776000830184611445565b92915050565b60006020820190506116926000830184611454565b92915050565b60008190508160005260206000209050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b60006116ea826117b1565b91506116f5836117b1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561172a57611729611837565b5b828201905092915050565b6000611740826117b1565b915061174b836117b1565b92508282101561175e5761175d611837565b5b828203905092915050565b600061177482611791565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156117e65780820151818401526020810190506117cb565b838111156117f5576000848401525b50505050565b6000600282049050600182168061181357607f821691505b6020821081141561182757611826611866565b5b50919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b7f494e56414c49445f5045524d49545f5349474e41545552450000000000000000600082015250565b7f4554485f5452414e534645525f4641494c454400000000000000000000000000600082015250565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b61195381611769565b811461195e57600080fd5b50565b61196a81611787565b811461197557600080fd5b50565b611981816117b1565b811461198c57600080fd5b50565b611998816117bb565b81146119a357600080fd5b5056fea264697066735822122014da9cc26e0a6e7656e5a2d16d42633236c3cde1ad3d4d9b82187034805a96d564736f6c63430008040033";

export class WETH__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WETH> {
    return super.deploy(overrides || {}) as Promise<WETH>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WETH {
    return super.attach(address) as WETH;
  }
  connect(signer: Signer): WETH__factory {
    return super.connect(signer) as WETH__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WETHInterface {
    return new utils.Interface(_abi) as WETHInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WETH {
    return new Contract(address, _abi, signerOrProvider) as WETH;
  }
}
