/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ChainlinkClient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkClient__factory>;
    getContractFactory(
      name: "ChainlinkRequestInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkRequestInterface__factory>;
    getContractFactory(
      name: "ENSInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ENSInterface__factory>;
    getContractFactory(
      name: "LinkTokenInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LinkTokenInterface__factory>;
    getContractFactory(
      name: "OperatorInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OperatorInterface__factory>;
    getContractFactory(
      name: "OracleInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleInterface__factory>;
    getContractFactory(
      name: "PointerInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PointerInterface__factory>;
    getContractFactory(
      name: "ENSResolver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ENSResolver__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC1155Holder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Holder__factory>;
    getContractFactory(
      name: "ERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "ExponentialCurve",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExponentialCurve__factory>;
    getContractFactory(
      name: "ICurve",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICurve__factory>;
    getContractFactory(
      name: "LinearCurve",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LinearCurve__factory>;
    getContractFactory(
      name: "IChainlinkAggregator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChainlinkAggregator__factory>;
    getContractFactory(
      name: "ISeacowsPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISeacowsPair__factory>;
    getContractFactory(
      name: "ISeacowsPairERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISeacowsPairERC20__factory>;
    getContractFactory(
      name: "ISeacowsPairETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISeacowsPairETH__factory>;
    getContractFactory(
      name: "IUniswapPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapPriceOracle__factory>;
    getContractFactory(
      name: "IUniswapV2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Factory__factory>;
    getContractFactory(
      name: "IUniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Pair__factory>;
    getContractFactory(
      name: "ISeacowsPairFactoryLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISeacowsPairFactoryLike__factory>;
    getContractFactory(
      name: "IOwnershipTransferCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwnershipTransferCallback__factory>;
    getContractFactory(
      name: "OwnableWithTransferCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableWithTransferCallback__factory>;
    getContractFactory(
      name: "AggregatorV2V3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV2V3Interface__factory>;
    getContractFactory(
      name: "ChainlinkAggregator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkAggregator__factory>;
    getContractFactory(
      name: "SeacowsCollectionRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SeacowsCollectionRegistry__factory>;
    getContractFactory(
      name: "SeacowsGroupFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SeacowsGroupFeed__factory>;
    getContractFactory(
      name: "UniswapPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapPriceOracle__factory>;
    getContractFactory(
      name: "SeacowsPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SeacowsPair__factory>;
    getContractFactory(
      name: "SeacowsPairEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SeacowsPairEnumerable__factory>;
    getContractFactory(
      name: "SeacowsPairEnumerableERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SeacowsPairEnumerableERC20__factory>;
    getContractFactory(
      name: "SeacowsPairEnumerableETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SeacowsPairEnumerableETH__factory>;
    getContractFactory(
      name: "SeacowsPairERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SeacowsPairERC20__factory>;
    getContractFactory(
      name: "SeacowsPairETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SeacowsPairETH__factory>;
    getContractFactory(
      name: "SeacowsPairFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SeacowsPairFactory__factory>;
    getContractFactory(
      name: "SeacowsPairMissingEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SeacowsPairMissingEnumerable__factory>;
    getContractFactory(
      name: "SeacowsPairMissingEnumerableERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SeacowsPairMissingEnumerableERC20__factory>;
    getContractFactory(
      name: "SeacowsPairMissingEnumerableETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SeacowsPairMissingEnumerableETH__factory>;
    getContractFactory(
      name: "SeacowsPairOriginal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SeacowsPairOriginal__factory>;
    getContractFactory(
      name: "SeacowsRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SeacowsRouter__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "WETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH__factory>;
    getContractFactory(
      name: "MyNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MyNFT__factory>;
    getContractFactory(
      name: "MyToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MyToken__factory>;

    getContractAt(
      name: "ChainlinkClient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkClient>;
    getContractAt(
      name: "ChainlinkRequestInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkRequestInterface>;
    getContractAt(
      name: "ENSInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ENSInterface>;
    getContractAt(
      name: "LinkTokenInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LinkTokenInterface>;
    getContractAt(
      name: "OperatorInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OperatorInterface>;
    getContractAt(
      name: "OracleInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OracleInterface>;
    getContractAt(
      name: "PointerInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PointerInterface>;
    getContractAt(
      name: "ENSResolver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ENSResolver>;
    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC1155Holder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Holder>;
    getContractAt(
      name: "ERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Receiver>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "ExponentialCurve",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExponentialCurve>;
    getContractAt(
      name: "ICurve",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICurve>;
    getContractAt(
      name: "LinearCurve",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LinearCurve>;
    getContractAt(
      name: "IChainlinkAggregator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChainlinkAggregator>;
    getContractAt(
      name: "ISeacowsPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISeacowsPair>;
    getContractAt(
      name: "ISeacowsPairERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISeacowsPairERC20>;
    getContractAt(
      name: "ISeacowsPairETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISeacowsPairETH>;
    getContractAt(
      name: "IUniswapPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapPriceOracle>;
    getContractAt(
      name: "IUniswapV2Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Factory>;
    getContractAt(
      name: "IUniswapV2Pair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Pair>;
    getContractAt(
      name: "ISeacowsPairFactoryLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISeacowsPairFactoryLike>;
    getContractAt(
      name: "IOwnershipTransferCallback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOwnershipTransferCallback>;
    getContractAt(
      name: "OwnableWithTransferCallback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableWithTransferCallback>;
    getContractAt(
      name: "AggregatorV2V3Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorV2V3Interface>;
    getContractAt(
      name: "ChainlinkAggregator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkAggregator>;
    getContractAt(
      name: "SeacowsCollectionRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SeacowsCollectionRegistry>;
    getContractAt(
      name: "SeacowsGroupFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SeacowsGroupFeed>;
    getContractAt(
      name: "UniswapPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapPriceOracle>;
    getContractAt(
      name: "SeacowsPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SeacowsPair>;
    getContractAt(
      name: "SeacowsPairEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SeacowsPairEnumerable>;
    getContractAt(
      name: "SeacowsPairEnumerableERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SeacowsPairEnumerableERC20>;
    getContractAt(
      name: "SeacowsPairEnumerableETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SeacowsPairEnumerableETH>;
    getContractAt(
      name: "SeacowsPairERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SeacowsPairERC20>;
    getContractAt(
      name: "SeacowsPairETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SeacowsPairETH>;
    getContractAt(
      name: "SeacowsPairFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SeacowsPairFactory>;
    getContractAt(
      name: "SeacowsPairMissingEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SeacowsPairMissingEnumerable>;
    getContractAt(
      name: "SeacowsPairMissingEnumerableERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SeacowsPairMissingEnumerableERC20>;
    getContractAt(
      name: "SeacowsPairMissingEnumerableETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SeacowsPairMissingEnumerableETH>;
    getContractAt(
      name: "SeacowsPairOriginal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SeacowsPairOriginal>;
    getContractAt(
      name: "SeacowsRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SeacowsRouter>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "WETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WETH>;
    getContractAt(
      name: "MyNFT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MyNFT>;
    getContractAt(
      name: "MyToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MyToken>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
